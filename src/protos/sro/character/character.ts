// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "sro/character/character.proto" (package "sro.character", syntax proto3)
// tslint:disable
import { Empty } from "../../google/protobuf/empty";
import { TargetId } from "../globals";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Location } from "../globals";
/**
 * @generated from protobuf message sro.character.CreateCharacterRequest
 */
export interface CreateCharacterRequest {
    /**
     * @generated from protobuf field: string owner_id = 1;
     */
    ownerId: string;
    /**
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * @generated from protobuf field: string gender = 3;
     */
    gender: string;
    /**
     * @generated from protobuf field: string realm = 4;
     */
    realm: string;
    /**
     * @generated from protobuf field: string dimension_id = 5;
     */
    dimensionId: string;
}
/**
 * @generated from protobuf message sro.character.CharacterDetails
 */
export interface CharacterDetails {
    /**
     * @generated from protobuf field: string character_id = 1;
     */
    characterId: string;
    /**
     * @generated from protobuf field: string owner_id = 2;
     */
    ownerId: string;
    /**
     * @generated from protobuf field: string name = 3;
     */
    name: string;
    /**
     * @generated from protobuf field: string gender = 4;
     */
    gender: string;
    /**
     * @generated from protobuf field: string realm = 5;
     */
    realm: string;
    /**
     * @generated from protobuf field: uint64 play_time = 6;
     */
    playTime: number;
    /**
     * @generated from protobuf field: sro.Location location = 8;
     */
    location?: Location;
    /**
     * @generated from protobuf field: string dimension_id = 9;
     */
    dimensionId: string;
    /**
     * @generated from protobuf field: uint64 created_at = 10;
     */
    createdAt: number;
}
/**
 * @generated from protobuf message sro.character.CharactersDetails
 */
export interface CharactersDetails {
    /**
     * @generated from protobuf field: repeated sro.character.CharacterDetails characters = 1;
     */
    characters: CharacterDetails[];
}
/**
 * @generated from protobuf message sro.character.EditCharacterRequest
 */
export interface EditCharacterRequest {
    /**
     * @generated from protobuf field: string character_id = 1;
     */
    characterId: string;
    /**
     * @generated from protobuf oneof: optional_owner_id
     */
    optionalOwnerId: {
        oneofKind: "ownerId";
        /**
         * @generated from protobuf field: string owner_id = 3;
         */
        ownerId: string;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_new_name
     */
    optionalNewName: {
        oneofKind: "newName";
        /**
         * @generated from protobuf field: string new_name = 4;
         */
        newName: string;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_gender
     */
    optionalGender: {
        oneofKind: "gender";
        /**
         * @generated from protobuf field: string gender = 5;
         */
        gender: string;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_realm
     */
    optionalRealm: {
        oneofKind: "realm";
        /**
         * @generated from protobuf field: string realm = 6;
         */
        realm: string;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_play_time
     */
    optionalPlayTime: {
        oneofKind: "playTime";
        /**
         * @generated from protobuf field: uint64 play_time = 7;
         */
        playTime: number;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_location
     */
    optionalLocation: {
        oneofKind: "location";
        /**
         * @generated from protobuf field: sro.Location location = 8;
         */
        location: Location;
    } | {
        oneofKind: undefined;
    };
    /**
     * @generated from protobuf oneof: optional_dimension
     */
    optionalDimension: {
        oneofKind: "dimensionId";
        /**
         * @generated from protobuf field: string dimension_id = 9;
         */
        dimensionId: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message sro.character.PlayTimeResponse
 */
export interface PlayTimeResponse {
    /**
     * @generated from protobuf field: uint64 time = 1;
     */
    time: number;
}
/**
 * @generated from protobuf message sro.character.AddPlayTimeRequest
 */
export interface AddPlayTimeRequest {
    /**
     * @generated from protobuf field: string character_id = 1;
     */
    characterId: string;
    /**
     * @generated from protobuf field: uint64 time = 2;
     */
    time: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class CreateCharacterRequest$Type extends MessageType<CreateCharacterRequest> {
    constructor() {
        super("sro.character.CreateCharacterRequest", [
            { no: 1, name: "owner_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "gender", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "realm", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "dimension_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<CreateCharacterRequest>): CreateCharacterRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.ownerId = "";
        message.name = "";
        message.gender = "";
        message.realm = "";
        message.dimensionId = "";
        if (value !== undefined)
            reflectionMergePartial<CreateCharacterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CreateCharacterRequest): CreateCharacterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string owner_id */ 1:
                    message.ownerId = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string gender */ 3:
                    message.gender = reader.string();
                    break;
                case /* string realm */ 4:
                    message.realm = reader.string();
                    break;
                case /* string dimension_id */ 5:
                    message.dimensionId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CreateCharacterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string owner_id = 1; */
        if (message.ownerId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.ownerId);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string gender = 3; */
        if (message.gender !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.gender);
        /* string realm = 4; */
        if (message.realm !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.realm);
        /* string dimension_id = 5; */
        if (message.dimensionId !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.dimensionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.CreateCharacterRequest
 */
export const CreateCharacterRequest = new CreateCharacterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CharacterDetails$Type extends MessageType<CharacterDetails> {
    constructor() {
        super("sro.character.CharacterDetails", [
            { no: 1, name: "character_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "owner_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "gender", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "realm", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "play_time", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 8, name: "location", kind: "message", T: () => Location },
            { no: 9, name: "dimension_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "created_at", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<CharacterDetails>): CharacterDetails {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.characterId = "";
        message.ownerId = "";
        message.name = "";
        message.gender = "";
        message.realm = "";
        message.playTime = 0;
        message.dimensionId = "";
        message.createdAt = 0;
        if (value !== undefined)
            reflectionMergePartial<CharacterDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CharacterDetails): CharacterDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string character_id */ 1:
                    message.characterId = reader.string();
                    break;
                case /* string owner_id */ 2:
                    message.ownerId = reader.string();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* string gender */ 4:
                    message.gender = reader.string();
                    break;
                case /* string realm */ 5:
                    message.realm = reader.string();
                    break;
                case /* uint64 play_time */ 6:
                    message.playTime = reader.uint64().toNumber();
                    break;
                case /* sro.Location location */ 8:
                    message.location = Location.internalBinaryRead(reader, reader.uint32(), options, message.location);
                    break;
                case /* string dimension_id */ 9:
                    message.dimensionId = reader.string();
                    break;
                case /* uint64 created_at */ 10:
                    message.createdAt = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CharacterDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string character_id = 1; */
        if (message.characterId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.characterId);
        /* string owner_id = 2; */
        if (message.ownerId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.ownerId);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* string gender = 4; */
        if (message.gender !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.gender);
        /* string realm = 5; */
        if (message.realm !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.realm);
        /* uint64 play_time = 6; */
        if (message.playTime !== 0)
            writer.tag(6, WireType.Varint).uint64(message.playTime);
        /* sro.Location location = 8; */
        if (message.location)
            Location.internalBinaryWrite(message.location, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string dimension_id = 9; */
        if (message.dimensionId !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.dimensionId);
        /* uint64 created_at = 10; */
        if (message.createdAt !== 0)
            writer.tag(10, WireType.Varint).uint64(message.createdAt);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.CharacterDetails
 */
export const CharacterDetails = new CharacterDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CharactersDetails$Type extends MessageType<CharactersDetails> {
    constructor() {
        super("sro.character.CharactersDetails", [
            { no: 1, name: "characters", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CharacterDetails }
        ]);
    }
    create(value?: PartialMessage<CharactersDetails>): CharactersDetails {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.characters = [];
        if (value !== undefined)
            reflectionMergePartial<CharactersDetails>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CharactersDetails): CharactersDetails {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated sro.character.CharacterDetails characters */ 1:
                    message.characters.push(CharacterDetails.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CharactersDetails, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated sro.character.CharacterDetails characters = 1; */
        for (let i = 0; i < message.characters.length; i++)
            CharacterDetails.internalBinaryWrite(message.characters[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.CharactersDetails
 */
export const CharactersDetails = new CharactersDetails$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EditCharacterRequest$Type extends MessageType<EditCharacterRequest> {
    constructor() {
        super("sro.character.EditCharacterRequest", [
            { no: 1, name: "character_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "owner_id", kind: "scalar", oneof: "optionalOwnerId", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "new_name", kind: "scalar", oneof: "optionalNewName", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "gender", kind: "scalar", oneof: "optionalGender", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "realm", kind: "scalar", oneof: "optionalRealm", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "play_time", kind: "scalar", oneof: "optionalPlayTime", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ },
            { no: 8, name: "location", kind: "message", oneof: "optionalLocation", T: () => Location },
            { no: 9, name: "dimension_id", kind: "scalar", oneof: "optionalDimension", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<EditCharacterRequest>): EditCharacterRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.characterId = "";
        message.optionalOwnerId = { oneofKind: undefined };
        message.optionalNewName = { oneofKind: undefined };
        message.optionalGender = { oneofKind: undefined };
        message.optionalRealm = { oneofKind: undefined };
        message.optionalPlayTime = { oneofKind: undefined };
        message.optionalLocation = { oneofKind: undefined };
        message.optionalDimension = { oneofKind: undefined };
        if (value !== undefined)
            reflectionMergePartial<EditCharacterRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EditCharacterRequest): EditCharacterRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string character_id */ 1:
                    message.characterId = reader.string();
                    break;
                case /* string owner_id */ 3:
                    message.optionalOwnerId = {
                        oneofKind: "ownerId",
                        ownerId: reader.string()
                    };
                    break;
                case /* string new_name */ 4:
                    message.optionalNewName = {
                        oneofKind: "newName",
                        newName: reader.string()
                    };
                    break;
                case /* string gender */ 5:
                    message.optionalGender = {
                        oneofKind: "gender",
                        gender: reader.string()
                    };
                    break;
                case /* string realm */ 6:
                    message.optionalRealm = {
                        oneofKind: "realm",
                        realm: reader.string()
                    };
                    break;
                case /* uint64 play_time */ 7:
                    message.optionalPlayTime = {
                        oneofKind: "playTime",
                        playTime: reader.uint64().toNumber()
                    };
                    break;
                case /* sro.Location location */ 8:
                    message.optionalLocation = {
                        oneofKind: "location",
                        location: Location.internalBinaryRead(reader, reader.uint32(), options, (message.optionalLocation as any).location)
                    };
                    break;
                case /* string dimension_id */ 9:
                    message.optionalDimension = {
                        oneofKind: "dimensionId",
                        dimensionId: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EditCharacterRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string character_id = 1; */
        if (message.characterId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.characterId);
        /* string owner_id = 3; */
        if (message.optionalOwnerId.oneofKind === "ownerId")
            writer.tag(3, WireType.LengthDelimited).string(message.optionalOwnerId.ownerId);
        /* string new_name = 4; */
        if (message.optionalNewName.oneofKind === "newName")
            writer.tag(4, WireType.LengthDelimited).string(message.optionalNewName.newName);
        /* string gender = 5; */
        if (message.optionalGender.oneofKind === "gender")
            writer.tag(5, WireType.LengthDelimited).string(message.optionalGender.gender);
        /* string realm = 6; */
        if (message.optionalRealm.oneofKind === "realm")
            writer.tag(6, WireType.LengthDelimited).string(message.optionalRealm.realm);
        /* uint64 play_time = 7; */
        if (message.optionalPlayTime.oneofKind === "playTime")
            writer.tag(7, WireType.Varint).uint64(message.optionalPlayTime.playTime);
        /* sro.Location location = 8; */
        if (message.optionalLocation.oneofKind === "location")
            Location.internalBinaryWrite(message.optionalLocation.location, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string dimension_id = 9; */
        if (message.optionalDimension.oneofKind === "dimensionId")
            writer.tag(9, WireType.LengthDelimited).string(message.optionalDimension.dimensionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.EditCharacterRequest
 */
export const EditCharacterRequest = new EditCharacterRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayTimeResponse$Type extends MessageType<PlayTimeResponse> {
    constructor() {
        super("sro.character.PlayTimeResponse", [
            { no: 1, name: "time", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<PlayTimeResponse>): PlayTimeResponse {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.time = 0;
        if (value !== undefined)
            reflectionMergePartial<PlayTimeResponse>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayTimeResponse): PlayTimeResponse {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 time */ 1:
                    message.time = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayTimeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 time = 1; */
        if (message.time !== 0)
            writer.tag(1, WireType.Varint).uint64(message.time);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.PlayTimeResponse
 */
export const PlayTimeResponse = new PlayTimeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddPlayTimeRequest$Type extends MessageType<AddPlayTimeRequest> {
    constructor() {
        super("sro.character.AddPlayTimeRequest", [
            { no: 1, name: "character_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "time", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 2 /*LongType.NUMBER*/ }
        ]);
    }
    create(value?: PartialMessage<AddPlayTimeRequest>): AddPlayTimeRequest {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.characterId = "";
        message.time = 0;
        if (value !== undefined)
            reflectionMergePartial<AddPlayTimeRequest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddPlayTimeRequest): AddPlayTimeRequest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string character_id */ 1:
                    message.characterId = reader.string();
                    break;
                case /* uint64 time */ 2:
                    message.time = reader.uint64().toNumber();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddPlayTimeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* string character_id = 1; */
        if (message.characterId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.characterId);
        /* uint64 time = 2; */
        if (message.time !== 0)
            writer.tag(2, WireType.Varint).uint64(message.time);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message sro.character.AddPlayTimeRequest
 */
export const AddPlayTimeRequest = new AddPlayTimeRequest$Type();
/**
 * @generated ServiceType for protobuf service sro.character.CharacterService
 */
export const CharacterService = new ServiceType("sro.character.CharacterService", [
    { name: "GetCharacter", options: { "google.api.http": { get: "/v1/characters/id/{id}" } }, I: TargetId, O: CharacterDetails },
    { name: "GetCharacters", options: { "google.api.http": { get: "/v1/characters" } }, I: Empty, O: CharactersDetails },
    { name: "GetCharactersForUser", options: { "google.api.http": { get: "/v1/characters/owner/{id}" } }, I: TargetId, O: CharactersDetails },
    { name: "CreateCharacter", options: { "google.api.http": { post: "/v1/characters", body: "*" } }, I: CreateCharacterRequest, O: CharacterDetails },
    { name: "DeleteCharacter", options: { "google.api.http": { delete: "/v1/characters/id/{id}" } }, I: TargetId, O: Empty },
    { name: "EditCharacter", options: { "google.api.http": { put: "/v1/characters/id/{character_id}", body: "*" } }, I: EditCharacterRequest, O: Empty },
    { name: "AddCharacterPlayTime", options: { "google.api.http": { put: "/v1/characters/id/{character_id}/playtime", body: "*" } }, I: AddPlayTimeRequest, O: PlayTimeResponse }
]);
