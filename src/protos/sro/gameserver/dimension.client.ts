// @generated by protobuf-ts 2.9.4 with parameter long_type_number
// @generated from protobuf file "sro/gameserver/dimension.proto" (package "sro.gameserver", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { DimensionService } from "./dimension";
import type { GameServerUpdateResponse } from "./dimension";
import type { EditDimensionRequest } from "./dimension";
import type { DuplicateDimensionRequest } from "./dimension";
import type { CreateDimensionRequest } from "./dimension";
import type { Dimensions } from "./dimension";
import type { Empty } from "../../google/protobuf/empty";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Dimension } from "./dimension";
import type { TargetId } from "../globals";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service sro.gameserver.DimensionService
 */
export interface IDimensionServiceClient {
    /**
     * @generated from protobuf rpc: GetDimension(sro.TargetId) returns (sro.gameserver.Dimension);
     */
    getDimension(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, Dimension>;
    /**
     * @generated from protobuf rpc: GetDimensions(google.protobuf.Empty) returns (sro.gameserver.Dimensions);
     */
    getDimensions(input: Empty, options?: RpcOptions): UnaryCall<Empty, Dimensions>;
    /**
     * @generated from protobuf rpc: CreateDimension(sro.gameserver.CreateDimensionRequest) returns (sro.gameserver.Dimension);
     */
    createDimension(input: CreateDimensionRequest, options?: RpcOptions): UnaryCall<CreateDimensionRequest, Dimension>;
    /**
     * @generated from protobuf rpc: DuplicateDimension(sro.gameserver.DuplicateDimensionRequest) returns (sro.gameserver.Dimension);
     */
    duplicateDimension(input: DuplicateDimensionRequest, options?: RpcOptions): UnaryCall<DuplicateDimensionRequest, Dimension>;
    /**
     * @generated from protobuf rpc: EditDimension(sro.gameserver.EditDimensionRequest) returns (sro.gameserver.Dimension);
     */
    editDimension(input: EditDimensionRequest, options?: RpcOptions): UnaryCall<EditDimensionRequest, Dimension>;
    /**
     * @generated from protobuf rpc: DeleteDimension(sro.TargetId) returns (google.protobuf.Empty);
     */
    deleteDimension(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, Empty>;
    /**
     * @generated from protobuf rpc: GameServerUpdate(sro.TargetId) returns (sro.gameserver.GameServerUpdateResponse);
     */
    gameServerUpdate(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, GameServerUpdateResponse>;
}
/**
 * @generated from protobuf service sro.gameserver.DimensionService
 */
export class DimensionServiceClient implements IDimensionServiceClient, ServiceInfo {
    typeName = DimensionService.typeName;
    methods = DimensionService.methods;
    options = DimensionService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetDimension(sro.TargetId) returns (sro.gameserver.Dimension);
     */
    getDimension(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, Dimension> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TargetId, Dimension>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetDimensions(google.protobuf.Empty) returns (sro.gameserver.Dimensions);
     */
    getDimensions(input: Empty, options?: RpcOptions): UnaryCall<Empty, Dimensions> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, Dimensions>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateDimension(sro.gameserver.CreateDimensionRequest) returns (sro.gameserver.Dimension);
     */
    createDimension(input: CreateDimensionRequest, options?: RpcOptions): UnaryCall<CreateDimensionRequest, Dimension> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateDimensionRequest, Dimension>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DuplicateDimension(sro.gameserver.DuplicateDimensionRequest) returns (sro.gameserver.Dimension);
     */
    duplicateDimension(input: DuplicateDimensionRequest, options?: RpcOptions): UnaryCall<DuplicateDimensionRequest, Dimension> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<DuplicateDimensionRequest, Dimension>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: EditDimension(sro.gameserver.EditDimensionRequest) returns (sro.gameserver.Dimension);
     */
    editDimension(input: EditDimensionRequest, options?: RpcOptions): UnaryCall<EditDimensionRequest, Dimension> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<EditDimensionRequest, Dimension>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteDimension(sro.TargetId) returns (google.protobuf.Empty);
     */
    deleteDimension(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, Empty> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<TargetId, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GameServerUpdate(sro.TargetId) returns (sro.gameserver.GameServerUpdateResponse);
     */
    gameServerUpdate(input: TargetId, options?: RpcOptions): UnaryCall<TargetId, GameServerUpdateResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<TargetId, GameServerUpdateResponse>("unary", this._transport, method, opt, input);
    }
}
